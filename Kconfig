# Copyright (c) 2025 Golioth, Inc.
#
# SPDX-License-Identifier: Apache-2.0

menuconfig POUCH
  bool "Golioth Pouch protocol"
  select ZCBOR
  select ZCBOR_CANONICAL
  select MBEDTLS
  select MBEDTLS_PSA_CRYPTO_C
  select PSA_WANT_ALG_SHA_256
  help
    Pouch is a protocol for communicating with Golioth from devices not
    directly connected to the internet.

if POUCH

config POUCH_BLOCK_SIZE
  int "Block size"
  default 512
  help
    The maximum block size to use for Pouch transfers.

config POUCH_THREAD_STACK_SIZE
  int "Pouch thread stack size"
  default 2048
  help
    The size of the stack for the internal Pouch thread.

config POUCH_THREAD_PRIORITY
  int "Pouch thread priority"
  default 5
  help
    The priority of the internal Pouch thread.

config POUCH_EVENT_QUEUE_DEPTH
  int "Maximum pending pouch events"
  default 4
  help
    The maximum number of Pouch events that can queued to send to
    the application.

choice
  prompt "Pouch uplink encryption scheme"
  help
    Select the encryption method to use for uplink Pouch transfers.

config POUCH_ENCRYPTION_SAEAD
  bool "Streaming AEAD"
  select PSA_WANT_ALG_ECDSA
  select PSA_WANT_ALG_ECDH
  select PSA_WANT_ALG_HKDF
  select PSA_WANT_ALG_HMAC
  select PSA_WANT_ALG_STREAM_CIPHER
  select PSA_WANT_ALG_SHA_256
  select PSA_WANT_ALG_SHA_384
  select PSA_WANT_ECC_SECP_R1_256
  select PSA_WANT_ECC_SECP_R1_384
  select PSA_WANT_KEY_TYPE_ECC_KEY_PAIR_DERIVE
  select PSA_WANT_KEY_TYPE_ECC_PUBLIC_KEY
  select MBEDTLS_ECDSA_C
  select MBEDTLS_ECP_C
  select BASE64
  # nRF Connect SDK only:
  select NORDIC_SECURITY_BACKEND
  select MBEDTLS_PK_PARSE_C
  select MBEDTLS_PK_C
  select MBEDTLS_X509_LIBRARY
  select MBEDTLS_X509_CRT_PARSE_C
  help
    Use a streaming AEAD encryption scheme for uplink Pouch transfers.

config POUCH_ENCRYPTION_NONE
  bool "Plaintext"
  help
    No encryption.

endchoice

config POUCH_AUTH_TAG_LEN
  int
  default 16 if POUCH_ENCRYPTION_SAEAD
  default 0

menu "Streaming AEAD encryption"
  depends on POUCH_ENCRYPTION_SAEAD

choice
  prompt "Encryption algorithm"
  help
    Select the encryption algorithm to use for Pouch.
    This will be used for both uplink and downlink transfers.

config POUCH_ENCRYPTION_CHACHA20_POLY1305
  bool "ChaCha20-Poly1305"
  select PSA_WANT_ALG_CHACHA20_POLY1305
  select PSA_WANT_KEY_TYPE_CHACHA20
  help
    Support ChaCha20-Poly1305 for encryption and decryption.

config POUCH_ENCRYPTION_AES_GCM
  bool "AES-GCM"
  select PSA_WANT_ALG_GCM
  select PSA_WANT_KEY_TYPE_AES
  help
    Support AES-GCM for encryption and decryption.

endchoice

config POUCH_SERVER_CERT_MAX_LEN
  int "Server certificate maximum length"
  default 4096
  help
    Maximum length of server certificate.

menuconfig POUCH_VALIDATE_SERVER_CERT
  bool "Validate server's certificate"
  default y
  help
    Disabling this will disable the server certificate validation.
    This should never be disabled in production.

config POUCH_SERVER_CERT_CN
  string "Server certificate common name"
  default "pouch.golioth.io"
  help
    The expected common name or subject alternative name for the
    server leaf certificate.

if POUCH_VALIDATE_SERVER_CERT

config POUCH_CA_CERT_FILENAME
  string "CA certificate filename"
  default "src/goliothrootx1.der"
  help
    The filename of the CA certificate to use for Pouch.
    This is used to verify the server's identity.

endif

config MBEDTLS_USER_CONFIG_ENABLE
  default y

config MBEDTLS_USER_CONFIG_FILE
  default "$(ZEPHYR_POUCH_MODULE_DIR)/src/saead/mbedtls_config.h"

endmenu

choice
  prompt "Pouch transport"
  help
    Select the transport protocol that will carry Pouch

config POUCH_TRANSPORT_BLE_GATT
  bool "BLE GATT"
  depends on BT
  select BT_GATT_DYNAMIC_DB
  select POUCH_TRANSPORT_BLE_GATT_COMMON
  help
    BLE GATT transport for Pouch

endchoice

module = POUCH
module-str = Pouch
source "subsys/logging/Kconfig.template.log_config"

endif

# Libraries
menu "Pouch libraries"

rsource "lib/Kconfig"

endmenu

# SDK
rsource "golioth_sdk/Kconfig"
